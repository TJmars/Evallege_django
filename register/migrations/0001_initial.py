# Generated by Django 3.1.7 on 2021-05-23 06:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import register.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('user_name', models.CharField(max_length=150, verbose_name='ユーザーネーム')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', register.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('college_name', models.CharField(max_length=200, verbose_name='大学名')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lecture_name', models.CharField(max_length=200, verbose_name='講義名')),
                ('teacher_name', models.CharField(max_length=200, verbose_name='担当教員名')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('college_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='register.college', verbose_name='大学名')),
            ],
        ),
        migrations.CreateModel(
            name='LectureEva',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade_lank', models.IntegerField(choices=[(5, 'S'), (4, 'A'), (3, 'B'), (2, 'C'), (1, 'D')], verbose_name='成績')),
                ('eva_lank', models.IntegerField(choices=[(5, '満足'), (4, 'やや満足'), (3, '普通'), (2, 'やや不満'), (1, '不満')], verbose_name='授業の評価')),
                ('dif_lank', models.IntegerField(choices=[(5, '簡単'), (4, 'やや簡単'), (3, '普通'), (2, 'やや難しい'), (1, '難しい')], verbose_name='授業の難易度')),
                ('eva_comment', models.TextField(blank=True, max_length=200, null=True, verbose_name='コメント(空欄可)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日')),
                ('lecture', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='register.lecture', verbose_name='講義名')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='評価者')),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='college_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='register.college', verbose_name='大学名'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='lecture_list',
            field=models.ManyToManyField(blank=True, to='register.Lecture', verbose_name='履修講義名'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
